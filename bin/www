 var app = require('../app');
 var debug = require('debug')('server:server');
 var http = require('http');

 var port = normalizePort(process.env.PORT || '5000');
 app.set('port', port);
 
 // Create HTTP Server
 var server = http.createServer(app);
 
 // Start Server by Listening at Port
 server.listen(port,()=>{
   console.log(`ðŸš€ Server is running on port ${port}`);
   
 });
 // Handle On Server Error Event
 server.on('error', onError);

 // Handle On Server Starting Or Listening
 server.on('listening', onListening);
 
 // Convert the given port to normalized port
 function normalizePort(val) {
   var port = parseInt(val, 10);
 
   if (isNaN(port)) {
     // named pipe
     return val;
   }
 
   if (port >= 0) {
     // port number
     return port;
   }
 
   return false;
 }
 
 // OnError function for the error event listneer
 function onError(error) {
   if (error.syscall !== 'listen') {
     throw error;
   }
 
   var bind = typeof port === 'string'
     ? 'Pipe ' + port
     : 'Port ' + port;
 
   // handle specific listen errors with friendly messages
   switch (error.code) {
     case 'EACCES':
       console.error(bind + ' requires elevated privileges');
       process.exit(1);
       break;
     case 'EADDRINUSE':
       console.error(bind + ' is already in use');
       process.exit(1);
       break;
     default:
       throw error;
   }
 }
 
 // onListening function for Listening Server Starting
 function onListening() {
   var addr = server.address();
   var bind = typeof addr === 'string'
     ? 'pipe ' + addr
     : 'port ' + addr.port;
   debug('Listening on ' + bind);
 }
 